# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_resetSystemStats
    rt::HARTNDb_startSystemStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "./.Xil/Vivado-791988-IT-RDIA-NSH/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    set rt::partid xc7a100tcsg324-1
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib

    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv {
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/lib.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/alignment_units.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/alu.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/alu_control.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/gpio/bidirec.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/branch_controller.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/control_unit.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/data_mem.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/data_path.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/forwarding_unit.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/gpio/gpio_top.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/hazard_controller.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/imm_gen.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/main_control.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/pipeline_controller.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/program_counter.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/reg_file.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/rom.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/rv32i_soc.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/core/rv32i_top.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/WishboneInterconnect/wb_intercon.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/WishboneInterconnect/wishbone_controller.sv
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/rv32i_soc_fpga_top.sv
    }
      rt::read_verilog {
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/raminfr.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_defines.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_receiver.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_regs.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_rfifo.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_sync_flops.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_tfifo.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_top.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_transmitter.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/uart/uart_wb.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/WishboneInterconnect/wb_intercon_1.2.2-r1/wb_mux.v
      /home/it/Chip_Design/final_microprocessor_soc/RV32_SoC_Design/src/soc/uncore/gpio/gpio_defines.v
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top rv32i_soc_fpag_top
    rt::set_parameter enableIncremental true
    set rt::reportTiming false
    rt::set_parameter elaborateOnly true
    rt::set_parameter elaborateRtl true
    rt::set_parameter eliminateRedundantBitOperator false
    rt::set_parameter elaborateRtlOnlyFlow true
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
    rt::set_parameter srlDepthThreshold 3
    rt::set_parameter rstSrlDepthThreshold 4
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter enableSplitFlowPath "./.Xil/Vivado-791988-IT-RDIA-NSH/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_rtlelab -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
